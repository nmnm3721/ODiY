<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->
	<resources mapping="/assets/**" location="/WEB-INF/views/assets/" />
	<resources mapping="/favicon.ico" location="/WEB-INF/views/favicon.ico" />
	<resources mapping="/robots.txt" location="/WEB-INF/views/robots.txt" />
	
	<!-- 컨트롤러나 서비스의 구현체가 포함되어 있는 패키지 -->
	<context:component-scan base-package="org.odiy.spring.controllers" />
	<context:component-scan base-package="org.odiy.spring.service.impl" />
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 스케줄링 어노테이션 선언 -->
	<task:annotation-driven />

	<!-- 스케줄러로 동작할 객체 생성 -->
	<beans:bean id="scheduleJob" class="org.odiy.spring.scheduler.TourApiScheduler" />

	<!--  생성한 스케줄러 객체에 대한 작업 스케줄 지정 -->
 	<task:scheduled-tasks>

		<!-- 1초마다 실행 
		<task:scheduled ref="scheduleJob" method="everySeconds" cron="* * * * * ?" />-->
		<!-- 1분마다 실행  
		<task:scheduled ref="scheduleJob" method="everyMinutes" cron="0 * * * * ?" />-->
		<!-- 매시 21분 0초에 실행 -->
		<!--<task:scheduled ref="scheduleJob" method="everyHour21min" cron="0 21 * * * ?" />-->
		<!-- 10초마다 실행 --> 
		<!-- <task:scheduled ref="scheduleJob" method="every10Seconds" cron="0/10 * * * * ?" /> -->
		<!-- 매일 16시 17분에 실행 --> 
		<!-- <task:scheduled ref="scheduleJob" method="collectTourApi" cron="0 17 16 * * ?" /> -->
		<!-- 매주 수요일 02시에 실행 -->
		<task:scheduled ref="scheduleJob" method="collectTourApi" cron="0 0 2 ? * 3" />
		<!-- 매달 7일 03시 00분에 실행 -->
		<!-- <task:scheduled ref="scheduleJob" method="collectTourApi" cron="0 0 3 7 * ?" /> -->
	</task:scheduled-tasks>
	
	
	
</beans:beans>
